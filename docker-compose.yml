version: '3.8'

services:
  app:
    build: .
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=development
      - PORT=4000
      - MONGODB_URI=mongodb://mongo:27017/messageboard
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your_production_jwt_secret_here
      - RATE_LIMIT_WINDOW_MS=3600000
      - RATE_LIMIT_MAX_REQUESTS=10
      - RATE_LIMIT_STORAGE=redis
      - LOG_LEVEL=info
      - CORS_ORIGIN=http://localhost:3000
    depends_on:
      - mongo
      - redis
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - messageboard-network

  mongo:
    image: mongo:6-focal
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=messageboard
    volumes:
      - mongo-data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    restart: unless-stopped
    networks:
      - messageboard-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - messageboard-network
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru

  mongo-express:
    image: mongo-express:latest
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=admin123
    depends_on:
      - mongo
    restart: unless-stopped
    networks:
      - messageboard-network
    profiles:
      - dev

  redis-commander:
    image: rediscommander/redis-commander:latest
    ports:
      - "8082:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - messageboard-network
    profiles:
      - dev

volumes:
  mongo-data:
  redis-data:

networks:
  messageboard-network:
    driver: bridge
